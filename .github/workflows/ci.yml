name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: |
        uv sync --frozen --all-extras
    
    - name: Verify installation
      run: uv run python examples/installation_verification.py
    
    - name: Run tests with pytest
      run: |
        uv run pytest tests/ -v --tb=short --cov=spark_profiler --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: |
        uv sync --frozen --all-extras
    
    - name: Run black format check
      run: uv run black --check --diff spark_profiler/ tests/ examples/
    
    - name: Run flake8 linting
      run: uv run flake8 spark_profiler/ tests/ examples/
    
    - name: Run mypy type checking
      run: uv run mypy spark_profiler/
      continue-on-error: true  # Allow type checking to fail without breaking CI

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: |
        uv sync --frozen --all-extras
    
    - name: Run safety check
      run: uv run safety check --json
      continue-on-error: true
    
    - name: Run bandit security scan
      run: uv run bandit -r spark_profiler/ -f json
      continue-on-error: true

  examples:
    name: Test Examples
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: |
        uv sync --frozen
    
    - name: Test basic usage example
      run: uv run python examples/basic_usage.py
    
    - name: Test sampling example
      run: uv run python examples/sampling_example.py
    
    - name: Test installation verification
      run: uv run python examples/installation_verification.py